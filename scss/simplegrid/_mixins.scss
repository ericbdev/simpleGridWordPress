//
// ericbdev has developed this mixin file for various uses
//

$colorBlack: #000 !default;
$base-font-size: 16px !default;

// Utilities
@function unit-value($num) {
	@return $num / ($num * 0 + 1);
}

@function pxEm($fontSize, $base-value: $base-font-size) {
	$fontSize: unit-value($fontSize) / unit-value($base-font-size);
	@if ($fontSize == 0em) { $fontSize: 0; }
	// Turn 0em into 0
	@return #{$fontSize}em;
}

@function darkenColor($color, $darkenValue: 20%) {
	@return darken($color, $darkenValue);
}
@mixin responsive-padding($size){
	.#{$size}-padding-right{
		padding-right: $padding-gutter;
		&.double-space{
			padding-right: $padding-gutter*2;
		}
		&.half-space{
			padding-right: $padding-gutter/2;
		}
	}
	.#{$size}-padding-left{
		padding-left: $padding-gutter;
		&.double-space{
			padding-left: $padding-gutter*2;
		}
		&.half-space{
			padding-left: $padding-gutter/2;
		}
	}
	.#{$size}-padding-bottom{
		padding-bottom: $padding-gutter;
		&.double-space{
			padding-bottom: $padding-gutter*2;
		}
		&.half-space{
			padding-bottom: $padding-gutter/2;
		}
	}
	.#{$size}-padding-top{
		padding-top: $padding-gutter;
		&.double-space{
			padding-top: $padding-gutter*2;
		}
		&.half-space{
			padding-top: $padding-gutter/2;
		}
	}

	.#{$size}-padding-all{
		padding: $padding-gutter;
		&.double-space{
			padding: $padding-gutter*2;
		}
		&.half-space{
			padding: $padding-gutter/2;
		}
	}
}

@mixin header-margin($space, $is_header: true) {
	@if $is_header == true{
		line-height: 120%;
		margin:      $space 0 0 0;
	} @else{
		margin:      $font-size-body 0 ;
	}
	padding:     0;
	&:first-child{
		margin-top:    0;
		margin-bottom: $space;
		&:last-child{
			margin-bottom: 0;
		}
	}
	&:last-child{
		&:first-child{
			margin-top: 0;
		}
	}
}

@mixin keyframes($animation-name) {
	@-webkit-keyframes #{$animation-name} {
		@content;
	}
	@-moz-keyframes #{$animation-name} {
		@content;
	}
	@-ms-keyframes #{$animation-name} {
		@content;
	}
	@-o-keyframes #{$animation-name} {
		@content;
	}
	@keyframes #{$animation-name} {
		@content;
	}
}

@mixin animation($str) {
	-webkit-animation: #{$str};
	-moz-animation: #{$str};
	-ms-animation: #{$str};
	-o-animation: #{$str};
	animation: #{$str};
}

@mixin transition($transition-property: all, $transition-time: 1s, $method: ease) { //implied defaults
	-webkit-transition: $transition-property $transition-time $method;
	-moz-transition:    $transition-property $transition-time $method;
	-ms-transition:     $transition-property $transition-time $method;
	-o-transition:      $transition-property $transition-time $method;
	transition:         $transition-property $transition-time $method;
}

@mixin box-shadow($properties, $inset: "") {
	//h-shadow v-shadow blur spread
	-webkit-box-shadow: #{$properties} #{$inset};
	-moz-box-shadow:    #{$properties} #{$inset};
	-ms-box-shadow:     #{$properties} #{$inset};
	box-shadow:         #{$properties} #{$inset};
}

@mixin linear-gradient($fromColor, $toColor, $directon: vertical, $from1Dist: 0%, $toDist: 100%) {
	@if $directon == horizontal{
		background: $fromColor; // Old browsers
		background: -webkit-gradient(linear, left top, right top, color-stop($from1Dist, $fromColor), color-stop($toDist, $toColor)); // Chrome,Safari4+
		background: -webkit-linear-gradient(left, $fromColor $from1Dist, $toColor $toDist); // Chrome10+,Safari5.1+
		background: -moz-linear-gradient(left, $fromColor $from1Dist, $toColor $toDist); // FF3.6+
		background: -ms-linear-gradient(left, $fromColor $from1Dist, $toColor $toDist); // IE10+
		background: -o-linear-gradient(left, $fromColor $from1Dist, $toColor $toDist); // Opera 11.10+
		background: linear-gradient(to right, $fromColor $from1Dist, $toColor $toDist); // W3C
		filter:     progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$fromColor}', endColorstr='#{$toColor}', GradientType=1); // IE6-9
	} @else{
		background: $fromColor; // Old browsers
		background: -webkit-gradient(linear, left top, left bottom, color-stop($from1Dist, $fromColor), color-stop($toDist, $toColor)); // Chrome,Safari4+
		background: -webkit-linear-gradient(top, $fromColor $from1Dist, $toColor $toDist); // Chrome10+,Safari5.1+
		background: -moz-linear-gradient(top, $fromColor $from1Dist, $toColor $toDist); // FF3.6+
		background: -ms-linear-gradient(top, $fromColor $from1Dist, $toColor $toDist); // IE10+
		background: -o-linear-gradient(top, $fromColor $from1Dist, $toColor $toDist); // Opera 11.10+
		background: linear-gradient(to bottom, $fromColor $from1Dist, $toColor $toDist); // W3C
		filter:     progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$fromColor}', endColorstr='#{$toColor}', GradientType=0); // IE6-9
	}
}

@mixin radial-gradient($fromColor, $toColor, $from1Dist: 0%, $toDist: 100%) {
	background: $fromColor; // Old browsers
	background: -moz-radial-gradient(center, ellipse cover, $fromColor $from1Dist, $toColor $toDist); // FF3.6+
	background: -webkit-gradient(radial, center center, 0px, center center, $from1Dist, color-stop($from1Dist, $fromColor), color-stop($toDist, $toColor)); // Chrome,Safari4+
	background: -webkit-radial-gradient(center, ellipse cover, $fromColor $from1Dist, $toColor $toDist); // Chrome10+,Safari5.1+
	background: -o-radial-gradient(center, ellipse cover, $fromColor $from1Dist, $toColor $toDist); // Opera 12+
	background: -ms-radial-gradient(center, ellipse cover, $fromColor $from1Dist, $toColor $toDist); // IE10+
	background: radial-gradient(ellipse at center, $fromColor $from1Dist, $toColor $toDist); // W3C
	filter:     progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$fromColor}', endColorstr='#{$toColor}', GradientType=1); // IE6-9 fallback on horizontal gradient
}

@mixin box-sizing($type: border-box) {
	-webkit-box-sizing: $type;
	-moz-box-sizing:    $type;
	box-sizing:         $type;
}

@mixin border-radius($radius: 0) {
	-webkit-border-radius: $radius;
	-moz-border-radius:    $radius;
	border-radius:         $radius;
}

@mixin opacity($opacity) {
	opacity: $opacity;
	$opacity-ie: $opacity * 100;
	filter: alpha(opacity=$opacity-ie); //IE8
}

@mixin placeholder{
	&.placeholder{ @content; }
	&:-moz-placeholder{ @content; }
	&::-moz-placeholder{ @content; }
	&::-webkit-input-placeholder{ @content; }
}

@mixin appearance($appearance) {
	appearance:         $appearance;
	-moz-appearance:    $appearance;
	-webkit-appearance: $appearance;
}

@mixin mediaQuery($size: $screen, $non-default: false) {
	@if $non-default{
		$mediaSize: 0;
		@if((length($size) == 2)){
			//2 indices
			$mediaSize: "#{$screen} and (min-width:#{nth($size, 1)}) and (max-width:#{nth($size, 2)})";
		} @else{
			//1 index
			$mediaSize: "#{$screen} and (min-width:#{$size})"
		}
		@media #{$mediaSize}{
			@content;
		}

	} @else{
		@media #{$size}{
			@content;
		}
	}
}

@mixin overlay-switch($tag) {
	//assumption of tag.on + tag.off + tag.placeholder
	position:   relative;
	display:    inline-block;
	text-align: center;
	margin:     0 auto;
	@include transition();
	&:hover{
		#{$tag}{
			&.on{
				opacity: 1;
			}
		}
	}
	#{$tag}{
		&.on{
			opacity:  0;
			@include transition();
			top:      0;
			left:     0;
			position: absolute;
			z-index:  100;
		}
		&.off{
			z-index:  0;
			top:      0;
			left:     0;
			position: absolute;
		}
	}
}

@mixin retina(){
	@media all and (-webkit-min-device-pixel-ratio : 1.5),
	all and (-o-min-device-pixel-ratio: 3/2),
	all and (min--moz-device-pixel-ratio: 1.5),
	all and (min-device-pixel-ratio: 1.5) {
		@content;
	}
}

@mixin at2x($path, $ext: "jpg", $cover:false) {
	$at1x_path: "#{$path}.#{$ext}";
	$at2x_path: "#{$path}@2x.#{$ext}";

	background-image: url("#{$at1x_path}");
	@if($cover){
		background-size: cover;
	}
	@include retina(){
		background-image: url("#{$at2x_path}");
		@if($cover){
			background-size: cover;
		}
	}
}
